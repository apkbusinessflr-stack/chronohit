export const clamp=(v,a,b)=>Math.max(a,Math.min(b,v));
export const ls={get:(k,d=null)=>{try{const v=localStorage.getItem(k);return v?JSON.parse(v):d}catch(_){return d}},set:(k,v)=>{try{localStorage.setItem(k,JSON.stringify(v))}catch(_){}}};
export function getDeviceId(){let id=ls.get('device.id',null);if(!id){id=cryptoId();ls.set('device.id',id)}return id}
function cryptoId(){const arr=new Uint8Array(18);if(typeof crypto!=='undefined'&&crypto.getRandomValues)crypto.getRandomValues(arr);else for(let i=0;i<arr.length;i++)arr[i]=Math.floor(Math.random()*256);return btoa(String.fromCharCode(...arr)).replace(/[+/=]/g,'').slice(0,24)}
export function todayKey(){const d=new Date();const y=d.getUTCFullYear();const m=String(d.getUTCMonth()+1).padStart(2,'0');const day=String(d.getUTCDate()).padStart(2,'0');return `${y}${m}${day}`}
export async function fetchJSON(url,opts){const r=await fetch(url,{headers:{'Content-Type':'application/json'},...opts});const data=await r.json().catch(()=>({}));if(!r.ok){const e=new Error(data?.error||`HTTP ${r.status}`);e.data=data;throw e}return data}
export const haptics={vibrate(ms){try{if(navigator.vibrate)navigator.vibrate(ms)}catch(_){}}}; export function gaEvent(n,p={}){try{if(window.gtag)window.gtag('event',n,p)}catch(_){}}