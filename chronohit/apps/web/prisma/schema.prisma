generator client { provider = "prisma-client-js" }
datasource db { provider = "postgresql"; url = env("DATABASE_URL") }

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authType  String
  locale    String   @default("en")
  country   String?
  username  String?  @unique
  banned    Boolean  @default(false)
  credits   Int      @default(0)
  tickets   Ticket[]
  scores    Score[]
}

model Ticket {
  id        String   @id @default(cuid())
  userId    String?
  subject   String
  body      String
  status    String   @default("open")
  createdAt DateTime @default(now())
}

model CreditPack {
  id         String   @id @default(cuid())
  sku        String   @unique
  priceCents Int
  credits    Int
  active     Boolean  @default(true)
}

model CreditLedger {
  id        String   @id @default(cuid())
  userId    String
  delta     Int
  source    String   // 'purchase'|'ad'|'spend'|'grant'
  gameId    String?
  matchId   String?
  txnId     String?  @unique
  createdAt DateTime @default(now())
  @@index([userId, createdAt])
}

model Game {
  id        String   @id @default(cuid())
  slug      String   @unique
  name      String
  status    String   @default("active")
  createdAt DateTime @default(now())
}

model Match {
  id          String   @id @default(cuid())
  gameId      String
  mode        String
  difficulty  String
  seed        String
  startedAt   DateTime @default(now())
  finishedAt  DateTime?
  status      String   @default("pending")
  winnerId    String?
}

model RoundEvent {
  id         String   @id @default(cuid())
  matchId    String
  userId     String
  lightIndex Int?
  payload    Json?
  shownAt    DateTime
  tappedAt   DateTime?
  outcome    String
  reactionMs Int?
  createdAt  DateTime @default(now())
  @@index([matchId, userId, createdAt])
}

model Score {
  id            String   @id @default(cuid())
  matchId       String
  userId        String
  finalScore    Int
  avgReactionMs Int
  penalties     Int
  streakMax     Int
  createdAt     DateTime @default(now())
  @@index([userId, createdAt])
}

model LeaderboardSnapshot {
  id        String   @id @default(cuid())
  gameId    String
  scope     String
  period    String
  userId    String
  score     Int
  avgReactionMs Int
  rank      Int
  updatedAt DateTime @default(now())
}

model Consent {
  id        String   @id @default(cuid())
  userId    String?
  tcfString String?
  region    String?
  createdAt DateTime @default(now())
}

model AdImpression {
  id         String   @id @default(cuid())
  sessionId  String
  userId     String?
  placement  String
  format     String
  viewable   Boolean
  durationMs Int
  refreshed  Boolean
  ts         DateTime @default(now())
  @@index([sessionId, ts])
}

model AdReward {
  id         String   @id @default(cuid())
  sessionId  String
  userId     String
  provider   String
  placement  String
  credits    Int
  rewardedAt DateTime @default(now())
  @@index([userId, rewardedAt])
}